/*!
 ***************************************************************************************
 *
 *  Copyright ? 2017-2018 yifneg. All Rights Reserved.
 *
 * \file      mqtt_aliyun_conf.h
 * \author    yifeng
 * \version   1.0
 * \date      2023年3月14日
 * \brief     mqtt配置头文件
 *
 *--------------------------------------------------------------------------------------
 * \attention
 *
 *
 ***************************************************************************************
 */

/*****************************************************************************************
 change history: 
    1.date  : 2023年3月14日
      author: yifeng
      change: create file

*****************************************************************************************/


/*=======================================================================================
下面两条指令是本头文件条件编译的预处理指令，用于防止本头文件被其他文件重复引用。
=======================================================================================*/
#ifndef MQTT_CONF_H
#define MQTT_CONF_H

/*========================================================================================
                                 本源程序包括的头文件                                     
建议：包含本项目的文件使用 #include "文件名.扩展名"，                                   
      包含系统库的文件使用 #include <文件名.扩展名> 。                                    
========================================================================================*/


/*=======================================================================================
下面这三条指令是用于区分编译系统为 C++ 或 C 的预处理指令。                               
"__cplusplus" 为 C++ 预处理器名字，这三条指令表明接在其下面的那些指令为 C 程序特征.      
=======================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif


/*=======================================================================================
                               系统运行的各类字符化常数定义                             
=======================================================================================*/
/*---------------------------------------------------------------------------------------
为了做到较好的软件可移植性，推荐用户在编程时使用下面定义的数据类型大小
---------------------------------------------------------------------------------------*/
#define BUF_SIZE 512

#define DEFAULT_CLIENTID    "00160002|securemode=3,signmethod=hmacsha1|"

#define DEFAULT_USERNAME    "YJ-518_0002&a1yjwhDbP8s"
#define DEFAULT_PASSWD      "ABDEABEB76FD53A488F6165CB5874446C119317D"

#define DEFAULT_HOSTNAME    "a1yjwhDbP8s.iot-as-mqtt.cn-shanghai.aliyuncs.com"
#define DEFAULT_PORT        1883

#define DEFAULT_SUBTOPIC    "/a1yjwhDbP8s/18750903063/user/get"
#define DEFAULT_PUBTOPIC    "/a1yjwhDbP8s/YJ-518_0002/user/update"

#define DEFAULT_QOS         0

#define KEEP_ALIVE          60


/*---------------------------------------------------------------------------------------
的字符化常数定义：
----------------------------------------------------------------------------------------*/


/*=======================================================================================
                      各类字符化常数和硬件设计相关的输入／输出引脚定义
=======================================================================================*/
/*--------------------------------------------------------------------------------------
的输入／输出引脚定义：
--------------------------------------------------------------------------------------*/


/*======================================================================================
                             全局变量数据结构类型定义
======================================================================================*/
/*--------------------------------------------------------------------------------------
的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
enum{
  SUB,
  PUB
};

typedef struct data_st_mqtt
{
  char hostname[BUF_SIZE];
  int  port;
  char username[BUF_SIZE];
  char passwd[BUF_SIZE];
  char clientid[BUF_SIZE];
  char sub_topic[BUF_SIZE];
  char pub_topic[BUF_SIZE];
  int  Qos;
}st_mqtt;


/*=======================================================================================
                                         全局常量声明                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局常量声明：
---------------------------------------------------------------------------------------*/


/*=======================================================================================
                                         全局变量声明                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局变量声明：
---------------------------------------------------------------------------------------*/


/*=======================================================================================
                                 源程序文件中的函数原型声明
=======================================================================================*/



/*!
 * \fn     gain_mqtt_conf
 * \brief  配置
 *          
 * \param  [in] char *ini_path   #
 * \param  [in] st_mqtt *mqtt    #
 * \param  [in] int type         #
 * 
 * \retval int
 */
int gain_mqtt_conf(char *ini_path,st_mqtt *mqtt);









/*=======================================================================================
下面这三条指令是用于与上面三条区分编译系统为 C++ 或 C 的预处理指令相对应。用于指定
 extern "C" 链接指示符作用域，此处的"}"与上面的"{"相对应，为链接指示符作用结束符。
=======================================================================================*/
#ifdef __cplusplus
}
#endif

#endif
/*
*****************************************************************************************
                                 本Ｃ语言源程序文件到此结束
*****************************************************************************************
*/


