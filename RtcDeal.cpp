/*!
 ***************************************************************************************
 *
 *  Copyright ? 2017-2018 yifneg. All Rights Reserved.
 *
 * \file      RtcDeal.cpp
 * \author    yifeng
 * \version   1.0
 * \date      2023年3月11日
 * \brief     Rtc处理源程序
 *
 *--------------------------------------------------------------------------------------
 * \attention
 *
 *
 ***************************************************************************************
 */

/*****************************************************************************************
 change history: 
    1.date  : 2023年3月11日
      author: yifeng
      change: create file

*****************************************************************************************/


/*========================================================================================
                                 本源程序包括的头文件                                     
建议：包含本项目的文件使用 #include "文件名.扩展名"，                                   
      包含系统库的文件使用 #include <文件名.扩展名> 。                                    
========================================================================================*/
#include "RtcDeal.h"
#include "TimerDeal.h"

/*=======================================================================================
下面这三条指令是用于区分编译系统为 C++ 或 C 的预处理指令。                               
"__cplusplus" 为 C++ 预处理器名字，这三条指令表明接在其下面的那些指令为 C 程序特征.      
=======================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif


/*=======================================================================================
                            本源程序文件内部使用的字符化常数定义                         
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的字符化常数定义：
----------------------------------------------------------------------------------------*/


/*=======================================================================================
                             本源程序文件内部使用的函数原型声明                          
=======================================================================================*/
static void *RtcDeal_Thread(void *arg);


/*=======================================================================================
                       本源程序文件内部使用的局部常量、字符化常数定义                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的局部常量、字符化常数定义：
---------------------------------------------------------------------------------------*/


/*=======================================================================================
                                         全局常量定义                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局常量定义：
---------------------------------------------------------------------------------------*/


/*=======================================================================================
                                         全局变量定义                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局变量定义：
---------------------------------------------------------------------------------------*/
RtcDealStru  gstvRtc;


/*=======================================================================================
                             本源程序文件内部使用的局部变量定义                          
=======================================================================================*/




/*
*****************************************************************************************
                            　       程序指令代码清单
*****************************************************************************************
*/



/*!
 * \fn     Start_RtcDeal_Monitor_Thread
 * \brief  定时器处理
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void Start_RtcDeal_Monitor_Thread(void)
{
  pthread_t rtc_tidp;

  printf("file: %s, line: %d, function: %s !\n", __FILE__, __LINE__, __FUNCTION__);
  
  if(pthread_create(&rtc_tidp, NULL, RtcDeal_Thread, NULL) != 0)
  {
    perror("pthread_create: RtcDeal_Thread");
    return;
  }
  
}



/*!
 * \fn     RtcDeal_Thread
 * \brief  RTC处理
 *          
 * \param  [in] void *arg   #
 * 
 * \retval static void *
 */
static void *RtcDeal_Thread(void *arg)
{
  printf("file: %s, line: %d, function: %s !\n", __FILE__, __LINE__, __FUNCTION__);
  
  pthread_detach(pthread_self());

  
  /* 初始化参数 */
  memset(&gstvRtc, 0, sizeof(RtcDealStru));
  
  while(!gstvSysRun.quit)
  {
    RtcGetSysTime();
    sleep(1);
  }

  pthread_exit(0);
}





/*!
 * \fn     Rtc_GetSysTime
 * \brief  获取系统时间
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void RtcGetSysTime(void)
{
  char YMD[15] = {0};
  char HMS[10] = {0};  
  char i;
  time_t current_time;
  struct tm* now_time;
  
  RtcDealStru *pRtc;

  pRtc = &gstvRtc;

  memset(pRtc->Date, 0, cRtcDateLen);
  memset(pRtc->Time, 0, cRtcTimeLen);
  
  time(&current_time);
  now_time = localtime(&current_time);
  
  strftime(YMD, sizeof(YMD), "%F ", now_time);
  strftime(HMS, sizeof(HMS), "%T", now_time);
  
  memcpy(pRtc->Date, YMD, cRtcDateLen-1);
  memcpy(pRtc->Time, HMS, cRtcTimeLen-1);
  
  printf("Current system date: %s\n", pRtc->Date);
  printf("Current system time: %s\n", pRtc->Time);
}




/*!
 * \fn     RtcSetSysTime
 * \brief  设置系统时间
 *          
 * \param  [in] char *Date   # 2023-03-11
 * \param  [in] char *Time   # 17:00:00
 * 
 * \retval void
 */
void RtcSetSysTime(char *Date, char *Time)
{
  char cmd[32];

  memset(cmd, 0, 32);

  sprintf(cmd, "date -s \"%s %s\"", Date, Time);
  printf("RtcSetSysTime: %s\n", cmd);
  //system(cmd);
}





/*=======================================================================================
下面这三条指令是用于与上面三条区分编译系统为 C++ 或 C 的预处理指令相对应。用于指定
 extern "C" 链接指示符作用域，此处的"}"与上面的"{"相对应，为链接指示符作用结束符。
=======================================================================================*/
#ifdef __cplusplus
}
#endif


/*
*****************************************************************************************
                                 本Ｃ语言源程序文件到此结束
*****************************************************************************************
*/
