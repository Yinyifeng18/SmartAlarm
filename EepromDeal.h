/*!
 ***************************************************************************************
 *
 *  Copyright ? 2017-2018 yifneg. All Rights Reserved.
 *
 * \file      EepromDeal.h
 * \author    yifeng
 * \version   1.0
 * \date      2023年3月11日
 * \brief     Eeprom处理头件
 *
 *--------------------------------------------------------------------------------------
 * \attention
 *
 *
 ***************************************************************************************
 */

/*****************************************************************************************
 change history: 
    1.date  : 2023年3月11日
      author: yifeng
      change: create file

*****************************************************************************************/


/*=======================================================================================
下面两条指令是本头文件条件编译的预处理指令，用于防止本头文件被其他文件重复引用。
=======================================================================================*/
#ifndef __EepromDeal_H__
#define __EepromDeal_H__


/*========================================================================================
                                 本源程序包括的头文件                                     
建议：包含本项目的文件使用 #include "文件名.扩展名"，                                   
      包含系统库的文件使用 #include <文件名.扩展名> 。                                    
========================================================================================*/
#include "Main.h"

/*=======================================================================================
下面这三条指令是用于区分编译系统为 C++ 或 C 的预处理指令。                               
"__cplusplus" 为 C++ 预处理器名字，这三条指令表明接在其下面的那些指令为 C 程序特征.      
=======================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif


/*=======================================================================================
                               系统运行的各类字符化常数定义                             
=======================================================================================*/
/*---------------------------------------------------------------------------------------
为了做到较好的软件可移植性，推荐用户在编程时使用下面定义的数据类型大小
---------------------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------------------
的字符化常数定义：
----------------------------------------------------------------------------------------*/
#define  cEepromIniPath  "./eeprom_conf.ini"

/*=======================================================================================
                      各类字符化常数和硬件设计相关的输入／输出引脚定义
=======================================================================================*/
/*--------------------------------------------------------------------------------------
的输入／输出引脚定义：
--------------------------------------------------------------------------------------*/


/*======================================================================================
                             全局变量数据结构类型定义
======================================================================================*/
/*--------------------------------------------------------------------------------------
网络参数的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct 
{
  u8  DhcpMode;         // DHCP模式 
}EeNetStru;

/*--------------------------------------------------------------------------------------
Ntp参数的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct 
{
  u8   NtpMode;         // Ntp 0:自动校时(获取网络时间即服务器)                 1:手动校时
}EeNtpStru;

/*--------------------------------------------------------------------------------------
存储参数的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct 
{
  u8   SaveSw;          // 保存开关
  u8   RecMode;         // 模式
}EeStorageStru;

/*--------------------------------------------------------------------------------------
音频输入参数的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct 
{
  u8  Vol;             
  u8  Aogain;
}EeAiStru;

/*--------------------------------------------------------------------------------------
音频输出参数的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct 
{
 u8  Vol;
 u8  Aogain;
}EeAoStru;

/*--------------------------------------------------------------------------------------
系统参数参数的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct
{
  u8   Language;        // 语言
  
  u8   ArmDisarm;       // 布撤防记忆
 
}EeSysStru;


/*=======================================================================================
                                         全局常量声明                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局常量声明：
---------------------------------------------------------------------------------------*/


/*=======================================================================================
                                         全局变量声明                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局变量声明：
---------------------------------------------------------------------------------------*/
extern EeNetStru     gstvEeNet;
extern EeNtpStru     gstvEeNtp;
extern EeStorageStru gstvEeStorage;
extern EeAiStru      gstvEeAi;
extern EeAoStru      gstvEeAo;
extern EeSysStru     gstvEeSys;


/*=======================================================================================
                                 源程序文件中的函数原型声明
=======================================================================================*/


/*!
 * \fn     EepromDeal_Init
 * \brief  初始化Eeprom
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EepromDeal_Init(void);



/*!
 * \fn     EeReadSysParamToSram
 * \brief  读取系统参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeReadSysParamToSram(void);


/*!
 * \fn     EeReadNetParamToSram
 * \brief   读取网络参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeReadNetParamToSram(void);

/*!
 * \fn     EeReadNtpParamToSram
 * \brief   读取NTP参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeReadNtpParamToSram(void);


/*!
 * \fn     EeReadStorageParamToSram
 * \brief   读取参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeReadStorageParamToSram(void);

/*!
 * \fn     EeReadAiParamToSram
 * \brief   读取参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeReadAiParamToSram(void);

/*!
 * \fn     EeReadAoParamToSram
 * \brief   读取参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeReadAoParamToSram(void);

/*!
 * \fn     EeResetEepromData
 * \brief  恢复出厂
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EeResetEepromData(void);




/*=======================================================================================
                         以下函数为参数独立设置及查询                                    
=======================================================================================*/


/*!
 * \fn     EePromSetSysParam
 * \brief  设置系统参数
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void EePromSetSysParam(void);

/*!
 * \fn     EepromSetNetParam
 * \brief  设置网络参数
 *          
 * \param  [in] void   # 
 * 
 * \retval void
 */
void EepromSetNetParam(void);


/*!
 * \fn     EepromSetNtpParam
 * \brief  设置参数
 *          
 * \param  [in] void   # 
 * 
 * \retval void
 */
void EepromSetNtpParam(void);


/*!
 * \fn     EepromSetStorageParam
 * \brief  设置参数
 *          
 * \param  [in] void   # 
 * 
 * \retval void
 */
void EepromSetStorageParam(void);



/*!
 * \fn     EepromSetAiParam
 * \brief  设置参数
 *          
 * \param  [in] void   # 
 * 
 * \retval void
 */
void EepromSetAiParam(void);



/*!
 * \fn     EepromSetAoParam
 * \brief  设置参数
 *          
 * \param  [in] void   # 
 * 
 * \retval void
 */
void EepromSetAoParam(void);





/*=======================================================================================
下面这三条指令是用于与上面三条区分编译系统为 C++ 或 C 的预处理指令相对应。用于指定
 extern "C" 链接指示符作用域，此处的"}"与上面的"{"相对应，为链接指示符作用结束符。
=======================================================================================*/
#ifdef __cplusplus
}
#endif

#endif
/*
*****************************************************************************************
                                 本Ｃ语言源程序文件到此结束
*****************************************************************************************
*/


